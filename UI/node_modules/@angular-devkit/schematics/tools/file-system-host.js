"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const path_1 = require("path");
class FileSystemHost {
    constructor(_root) {
        this._root = _root;
    }
    listDirectory(path) {
        let files = fs_1.readdirSync(path_1.join(this._root, path));
        if (path == '/') {
            files = files
                .filter(path => path !== '.git')
                .filter(path => path !== 'node_modules');
        }
        // Add the path as root is part of the file list.
        return files;
    }
    isDirectory(path) {
        return fs_1.statSync(path_1.join(this._root, path)).isDirectory();
    }
    readFile(path) {
        return fs_1.readFileSync(path_1.join(this._root, path));
    }
    join(path1, path2) {
        return path_1.join(path1, path2);
    }
}
exports.FileSystemHost = FileSystemHost;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1zeXN0ZW0taG9zdC5qcyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvaGFuc2wvU291cmNlcy9kZXZraXQvIiwic291cmNlcyI6WyJwYWNrYWdlcy9hbmd1bGFyX2RldmtpdC9zY2hlbWF0aWNzL3Rvb2xzL2ZpbGUtc3lzdGVtLWhvc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFRQSwyQkFBeUQ7QUFDekQsK0JBQTRCO0FBRTVCO0lBQ0UsWUFBb0IsS0FBYTtRQUFiLFVBQUssR0FBTCxLQUFLLENBQVE7SUFBRyxDQUFDO0lBRXJDLGFBQWEsQ0FBQyxJQUFZO1FBQ3hCLElBQUksS0FBSyxHQUFHLGdCQUFXLENBQUMsV0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNoRCxFQUFFLENBQUMsQ0FBQyxJQUFJLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoQixLQUFLLEdBQUcsS0FBSztpQkFFVixNQUFNLENBQUMsSUFBSSxJQUFJLElBQUksS0FBSyxNQUFNLENBQUM7aUJBRS9CLE1BQU0sQ0FBQyxJQUFJLElBQUksSUFBSSxLQUFLLGNBQWMsQ0FBQyxDQUFDO1FBQzdDLENBQUM7UUFFRCxpREFBaUQ7UUFDakQsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNmLENBQUM7SUFDRCxXQUFXLENBQUMsSUFBWTtRQUN0QixNQUFNLENBQUMsYUFBUSxDQUFDLFdBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDeEQsQ0FBQztJQUNELFFBQVEsQ0FBQyxJQUFZO1FBQ25CLE1BQU0sQ0FBQyxpQkFBWSxDQUFDLFdBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELElBQUksQ0FBQyxLQUFhLEVBQUUsS0FBYTtRQUMvQixNQUFNLENBQUMsV0FBSSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDO0NBQ0Y7QUExQkQsd0NBMEJDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgRmlsZVN5c3RlbVRyZWVIb3N0IH0gZnJvbSAnQGFuZ3VsYXItZGV2a2l0L3NjaGVtYXRpY3MnO1xuaW1wb3J0IHsgcmVhZEZpbGVTeW5jLCByZWFkZGlyU3luYywgc3RhdFN5bmMgfSBmcm9tICdmcyc7XG5pbXBvcnQgeyBqb2luIH0gZnJvbSAncGF0aCc7XG5cbmV4cG9ydCBjbGFzcyBGaWxlU3lzdGVtSG9zdCBpbXBsZW1lbnRzIEZpbGVTeXN0ZW1UcmVlSG9zdCB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX3Jvb3Q6IHN0cmluZykge31cblxuICBsaXN0RGlyZWN0b3J5KHBhdGg6IHN0cmluZykge1xuICAgIGxldCBmaWxlcyA9IHJlYWRkaXJTeW5jKGpvaW4odGhpcy5fcm9vdCwgcGF0aCkpO1xuICAgIGlmIChwYXRoID09ICcvJykge1xuICAgICAgZmlsZXMgPSBmaWxlc1xuICAgICAgLy8gUmVtb3ZlIC5naXQuXG4gICAgICAgIC5maWx0ZXIocGF0aCA9PiBwYXRoICE9PSAnLmdpdCcpXG4gICAgICAgIC8vIFJlbW92ZSBub2RlX21vZHVsZXMuXG4gICAgICAgIC5maWx0ZXIocGF0aCA9PiBwYXRoICE9PSAnbm9kZV9tb2R1bGVzJyk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHRoZSBwYXRoIGFzIHJvb3QgaXMgcGFydCBvZiB0aGUgZmlsZSBsaXN0LlxuICAgIHJldHVybiBmaWxlcztcbiAgfVxuICBpc0RpcmVjdG9yeShwYXRoOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RhdFN5bmMoam9pbih0aGlzLl9yb290LCBwYXRoKSkuaXNEaXJlY3RvcnkoKTtcbiAgfVxuICByZWFkRmlsZShwYXRoOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gcmVhZEZpbGVTeW5jKGpvaW4odGhpcy5fcm9vdCwgcGF0aCkpO1xuICB9XG5cbiAgam9pbihwYXRoMTogc3RyaW5nLCBwYXRoMjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGpvaW4ocGF0aDEsIHBhdGgyKTtcbiAgfVxufVxuIl19